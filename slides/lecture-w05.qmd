---
title: "Research Methods in Developmental Linguistics -- Week 5"
subtitle: "Group-level effects: Intercepts"
author: "Dr Stefano Coretta"
institute: "University of Edinburgh"
format:
  mono-light-revealjs:
    theme: [default, custom.scss]
    history: false
execute: 
  echo: false
---

```{r setup, include=FALSE}
library(tidyverse)
theme_set(theme_light())

library(brms)
library(tidybayes)

options(ggplot2.discrete.fill = RColorBrewer::brewer.pal(8, "Dark2"))
options(ggplot2.discrete.colour = RColorBrewer::brewer.pal(8, "Dark2"))
options(show.signif.stars = FALSE)

my_seed <- 8878
set.seed(my_seed)
options(scipen=999)
```


## Ota 2009

- From *The KEY to the ROCK: Near-homophony in nonnative visual word recognition* ([10.1016/j.cognition.2008.12.007](https://doi.org/10.1016/j.cognition.2008.12.007))

- Visual semantic-relatedness paradigm.

  - LOCK/ROCK ~ KEY.

- Japanese data.

## Ota 2009

```{r}
#| label: ota2009

ota2009 <- read_csv("data/ota2009/key-rock.csv") %>%
  filter(
    Procedure == "TrialProc", Contrast != "F"
  ) %>%
  mutate(
    Subject = as.factor(Subject), RT_log = log(Words.RT)
  )
ota2009
```

## Ota 2009

```{r}
#| label: fig-contr-cond

ota2009 %>%
  ggplot(aes(Contrast, RT_log)) +
  geom_violin(aes(fill = Condition), alpha = 0.2) +
  geom_jitter(
    aes(colour = Condition), alpha = 0.4,
    position = position_jitterdodge(jitter.width = 0.1, dodge.width = 0.9)
  ) +
  stat_summary(
    aes(group = Condition),
    position = position_dodge(width = 0.9),
    fun = "median", geom = "point", size = 3
  )
```

## Ota 2009

```{r}
#| label: ota-bm-1
#| echo: true

ota_bm_1 <- brm(
  RT_log ~ Condition * Contrast,
  family = gaussian,
  data = ota2009,
  backend = "cmdstanr",
  seed = my_seed,
  file = "data/cache/ota_bm_1"
)
```

## Ota 2009

```{r}
#| label: ota-bm-1-sum

summary(ota_bm_1, prob = 0.9)
```

## Ota 2009

```{r}
#| label: ota-bm-1-gdraws
#| echo: true

ota_bm_1_gdraws <- ota_bm_1 %>%
  gather_draws(`b_.*`, regex = TRUE)
ota_bm_1_gdraws
```

## Ota 2009

```{r}
#| label: fig-ota-bm-1-gdraws

ota_bm_1_gdraws %>%
  filter(.variable != "b_Intercept") %>%
  ggplot(aes(.value, .variable, fill = .variable)) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  stat_halfeye(slab_alpha = 0.5) +
  theme(legend.position = "none")
```

## Ota 2009

```{r ota-bm-1-sdraws}
ota_bm_1_sdraws <- ota_bm_1 %>%
  spread_draws(`b_.*`, regex = TRUE) %>%
  mutate(
    LR_cond_dif = b_ConditionUnrelated + `b_ConditionUnrelated:ContrastLR`
  )
ota_bm_1_sdraws
```

## Ota 2009

```{r}
#| label: fig-ota-bm-1

ota_bm_1_sdraws %>%
  ggplot(aes(LR_cond_dif)) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  stat_halfeye(slab_alpha = 0.5)
```

## Ota 2009: subject-level intercepts

```{r}
#| label: fig-subj-int
#| fig_asp: 0.5

ota2009 %>%
  filter(Contrast == "LR") %>%
  ggplot(aes("a", RT_log)) +
  geom_violin() +
  geom_jitter(
    aes(colour = Subject), alpha = 0.4,
    width = 0.1
  ) +
  stat_summary(
    position = position_dodge(width = 0.9),
    fun = "median", geom = "point"
  ) +
  facet_wrap(~ Subject, nrow = 2) +
  labs(x = element_blank()) +
  theme(
    axis.text.x = element_blank(),
    legend.position = "none"
  )
```

## Ota 2009: subject-level intercepts

```{r}
#| label: ota-bm-2
#| echo: true

ota_bm_2 <- brm(
  RT_log ~
    Condition * Contrast +
    (1 | Subject),
  family = gaussian,
  data = ota2009,
  backend = "cmdstanr",
  seed = my_seed,
  file = "data/cache/ota_bm_2"
)
```

## Ota 2009: subject-level intercepts

```{r}
#| label: ota-bm-2-sum

summary(ota_bm_2, prob = 0.9)
```

## Ota 2009: subject-level intercepts

```{r}
#| label: ota-bm-2-sdraws
#| echo: true

ota_bm_2_sdraws <- ota_bm_2 %>%
  spread_draws(`b_.*`, regex = TRUE) %>%
  mutate(
    LR_cond_dif = b_ConditionUnrelated + `b_ConditionUnrelated:ContrastLR`
  )
ota_bm_2_sdraws
```

## Ota 2009: subject-level intercepts

```{r}
#| label: fig-ota-bm-2

ota_bm_2_sdraws %>%
  ggplot(aes(LR_cond_dif)) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  stat_halfeye(slab_alpha = 0.5)
```

## Ota 2009: subject-level intercepts

```{r}
#| label: ota-bm-2-int
#| echo: true

ota_bm_2_int <- ota_bm_2 %>%
  gather_draws(r_Subject[Subject,term])
ota_bm_2_int
```

## Ota 2009: subject-level intercepts

```{r}
#| label: fig-ota-bm-2-int

ota_bm_2_int %>%
  ggplot(aes(.value, reorder(as.factor(Subject), .value))) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  stat_halfeye()
```

## Ota 2009: subject-level intercepts

```{r}
#| label: ota-bm-fixef
#| echo: true

fixef(ota_bm_1, probs = c(0.05, 0.95))
fixef(ota_bm_2, probs = c(0.05, 0.95))
```

## Ota 2009: subject-level slopes

```{r}
#| label: fig-subj-slo
#| fig_asp: 0.5

ota2009 %>%
  filter(Contrast == "LR") %>%
  ggplot(aes(Condition, RT_log)) +
  geom_violin(aes(fill = Condition), alpha = 0.5) +
  # geom_jitter(
  #   aes(colour = Condition), alpha = 0.4,
  #   position = position_jitterdodge(jitter.width = 0.1, dodge.width = 0.9)
  # ) +
  stat_summary(
    aes(group = Condition),
    position = position_dodge(width = 0.9),
    fun = "median", geom = "point"
  ) +
  facet_wrap(~ Subject, nrow = 2) +
  theme(axis.text.x = element_blank(), legend.position = "bottom")
```

## Song 2020

- From *Second language users exhibit shallow morphological processing* ([10.1017/S0272263120000170](https://doi.org/10.1017/S0272263120000170)).

- English L1 and L2 participants (L2 participants are native speakers of Cantonese).

- **Lexical decision task:** Is the word a real English word or not?

- Each trial:

  - **Prime**: *prolong* (unrelated), *unkind* (constituent), *kindness* (non-constituent).

  - **Target**: *unkindness* (*[un-kind]-ness*, not *un-[kind-ness]*).

- Data gathered: Reaction times and accuracy.

## Song 2020

```{r}
#| label: shallow

shallow <- read_csv("data/song2020/shallow.csv") %>%
  filter(Critical_Filler == "Critical")
shallow
```

## Song 2020

```{r}
#| label: sha-bm-1
#| echo: true

sha_bm_1 <- brm(
  ACC ~ Group * Relation_type * Branching,
  family = bernoulli,
  data = shallow,
  cores = 4,
  backend = "cmdstanr",
  seed = my_seed,
  file = "data/cache/sha_bm_1"
)
```

```{r}
#| label: sha-bm-1-sum

fixef(sha_bm_1, probs = c(0.05, 0.95)) %>%
  as_tibble(rownames = "term") %>%
  filter(Estimate < 5, Estimate > -2)
```

## Song 2020

```{r}
#| label: sha-bm-1-conds

sha_conds <- make_conditions(shallow, "Branching")

conditional_effects(sha_bm_1, "Relation_type:Group", conditions = sha_conds)
```

## Song 2020

```{r}
#| label: sha-bm-2
#| echo: true

sha_bm_2 <- brm(
  ACC ~ Group * Relation_type * Branching +
    (1 | ID),
  family = bernoulli,
  data = shallow,
  cores = 4,
  backend = "cmdstanr",
  seed = my_seed,
  file = "data/cache/sha_bm_2"
)
```

```{r}
#| label: sha-bm-2-sum

fixef(sha_bm_2, probs = c(0.05, 0.95)) %>%
  as_tibble(rownames = "term") %>%
  filter(Estimate < 5, Estimate > -2)
```

## Song 2020

```{r sha-bm-2-conds}
conditional_effects(sha_bm_2, "Relation_type:Group", conditions = sha_conds)
```


## Song 2020

```{r}
#| label: sha-bm-fixef

fixef(sha_bm_1, probs = c(0.05, 0.95)) %>%
  as_tibble(rownames = "term") %>%
  filter(Estimate < 5, Estimate > -2)
fixef(sha_bm_2, probs = c(0.05, 0.95)) %>%
  as_tibble(rownames = "term") %>%
  filter(Estimate < 5, Estimate > -2)
```

## Song 2020

```{r}
#| label: sha-bm-2-full-sum

summary(sha_bm_2, prob = 0.9)
```

## Summary

- If the data contains groupings other than the ones that were manipulated in the design, you need to account for it.

- The model must account for the fact that some data is from within a specific member of the group (like a participant, a specific word, etc).

- You can account for groupings in the data with group-level effects. You should always include group-level intercept to account for mean differences across members of the groups.
